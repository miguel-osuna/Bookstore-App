version: 2

jobs:
  build:
    working_directory: ~/base_project

    docker:
      # Primary container image with stable versions of Docker and Git
      - image: circleci/python:3.8.0

    steps:
      # Setup Docker environment
      - setup_remote_docker:
          docker_layer_caching: true

      # Step 1: obtain repo from GitHub
      - checkout

      # Installing docker compose
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose


      # Step 2: build docker images from docker-compose file
      - run:
          name: Build images and start network
          command: |
            docker-compose  build
            docker-compose up -d

  deploy: &deploy-heroku

    working_directory: ~/base_project

    docker:
      # Primary container image with stable versions of Docker and Git
      - image: docker:stable-git
    steps:
      - checkout

  deploy-staging:
    <<: *deploy-heroku

    environment:
      ENVIRONMENT: "staging"

    steps:
      - checkout
      - run:
          # Deployment to heroku staging environment
          name: Deploy to heroku development remote
          command: 
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP-$ENVIRONMENT.git $CIRCLE_BRANCH:master

  deploy-production:
    <<: *deploy-heroku

    environment:
      ENVIRONMENT: "production"

    steps:
      - checkout
      - run:
          # Deployment to heroku staging environment
          name: Deploy to heroku development remote
          command: 
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP-$ENVIRONMENT.git $CIRCLE_BRANCH:master

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging

      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: master

